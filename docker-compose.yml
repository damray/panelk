version: '3.2'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.2
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - type: volume
        source: elasticsearch
        target: /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - ES_JAVA_OPTS=-Xmx4g -Xms2g
      - ELASTIC_PASSWORD=changeme
      - discovery.type=single-node
    networks:
      - elk

  logstash:
    image: docker.elastic.co/logstash/logstash:7.6.2
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "5514:5514/tcp"
      - "9600:9600"
    environment:
      - LS_JAVA_OPTS=-Xmx4g -Xms1g
      - LOG_LEVEL=debug
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.2
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    environment:
      - ELASTIC_PASSWORD=changeme
    networks:
      - elk
    depends_on:
      - elasticsearch
    healthcheck:
        test: curl -s -f http://elastic:${ELASTIC_PASSWORD}@localhost:9200/_cat/health; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
        interval: 30s
        timeout: 10s
        retries: 5
  
  setup_panelk:
    image: centos:latest
    volumes:
      - ./scripts/object1.ndjson:/usr/share/kibana/config/object1.ndjson:ro
      - ./scripts/object2.ndjson:/usr/share/kibana/config/object2.ndjson:ro
      - ./scripts/setup-panelk.sh:/usr/local/bin/setup-panelk.sh:ro
      - ./scripts/threat_template_mapping.json:/usr/share/kibana/config/threat_template_mapping.json:ro
      - ./scripts/gp_template_mapping.json:/usr/share/kibana/config/gp_template_mapping.json:ro
      - ./scripts/traffic_template_mapping.json:/usr/share/kibana/config/traffic_template_mapping.json:ro
    command: ['/bin/bash', '-c', 'cat /usr/local/bin/setup-panelk.sh | tr -d "\r" | bash']
    environment: 
      - ELASTIC_PASSWORD=changeme
      - user=elastic
    networks: 
      - elk
    depends_on: 
      - kibana

networks:
  elk:
    driver: bridge

volumes:
  elasticsearch:
